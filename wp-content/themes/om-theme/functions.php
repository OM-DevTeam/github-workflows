<?php

/**
 * Do not edit this file unless you know what you're doing.
 */

/**
 * Helper function for prettying up errors.
 *
 * @param string $message
 * @param string $subtitle
 * @param string $title
 */
$sage_error = function ($message, $subtitle = '', $title = '') {
    $title = $title ?: __('Sage &rsaquo; Error', 'sage');
    $footer = '<a href="https://roots.io/sage/docs/">roots.io/sage/docs/</a>';
    $message = "<h1>{$title}<br><small>{$subtitle}</small></h1><p>{$message}</p><p>{$footer}</p>";
    wp_die($message, $title);
};

// Ensure a compatible version of PHP is being used.
if (version_compare('7.2', phpversion(), '>')) {
    $sage_error(__('You must be using PHP 7.2 or greater.', 'sage'), __('Invalid PHP version', 'sage'));
}

// Ensure a compatible version of WordPress is being used.
if (version_compare('5.2', get_bloginfo('version'), '>')) {
    $sage_error(__('You must be using WordPress 5.2 or greater.', 'sage'), __('Invalid WordPress version', 'sage'));
}

// Ensure dependencies are loaded.
if (!file_exists($composer = __DIR__ . '/vendor/autoload.php')) {
    $sage_error(
        __('You must run <code>composer install</code> from the Sage directory.', 'sage'),
        __('Autoloader not found.', 'sage')
    );
}
require_once $composer;

/*
 * Register any Sage theme files.
 *
 * The mapped array determines the code library included in your theme.
 * Add or remove files to the array as needed. Supports child theme overrides.
 */
array_map(function ($file) use ($sage_error) {
    $file = "app/{$file}.php";
    if (!locate_template($file, true, true)) {
        $sage_error(
            sprintf(__('Error locating <code>%s</code> for inclusion.', 'sage'), $file),
            __('File not found', 'sage')
        );
    }
}, ['helpers', 'setup', 'filters', 'admin']);

/*
 * Boot Acorn with the Sage provider.
 * @link https://roots.io/acorn/
 */
add_theme_support('sage');
Roots\bootloader();

/**
 * Load ACF local json
 * @author Jitendra P <jitendra@growwithom.com>
 */
add_filter('acf/settings/load_json', 'cdp_acf_json_load_point');
function cdp_acf_json_load_point($paths)
{
    unset($paths[0]);

    $paths[] = get_stylesheet_directory() . '/inc/fields';

    return $paths;
}

/**
 * Save ACF fields to json
 * @author Jitendra P <jitendra@growwithom.com>
 */
add_filter('acf/settings/save_json', 'cdp_acf_json_save_point');
function cdp_acf_json_save_point($path)
{
    $path = get_stylesheet_directory() . '/inc/fields';

    return $path;
}

/**
 * Import includes
 * @author Jitendra P <jitendra@growwithom.com>
 */

$includes = [
    'custom-post-types/case-studies',
    'custom-post-types/ebooks',
    'custom-post-types/tools',
    'custom-post-types/videos',
];

foreach ($includes as $file) {
    if (locate_template('inc/' . $file . '.php')) {
        require_once locate_template('inc/' . $file . '.php');
    } else {
        echo $file;
    }
}

/**
 * ACF Options Pages
 * @author Jitendra P <jitendra@growwithom.com>
 */
if (function_exists('acf_add_options_page')) {
    acf_add_options_page(array(
        'page_title'     => 'Theme General Settings',
        'menu_title'    => 'Theme Settings',
        'menu_slug'     => 'theme-general-settings',
        'capability'    => 'edit_posts',
        'redirect'        => false
    ));

    acf_add_options_sub_page(array(
        'page_title'     => 'Theme Header Settings',
        'menu_title'    => 'Header',
        'parent_slug'    => 'theme-general-settings',
    ));

    acf_add_options_sub_page(array(
        'page_title'     => 'Theme 404 Settings',
        'menu_title'    => '404',
        'parent_slug'    => 'theme-general-settings',
    ));

    acf_add_options_sub_page(array(
        'page_title'     => 'Theme Footer Settings',
        'menu_title'    => 'Footer',
        'parent_slug'    => 'theme-general-settings',
    ));
}

// for image resize
add_filter('big_image_size_threshold', '__return_false');

/**
 * When click on user name - show user data
 * @author JP <jitendra@growwithom.com>
 */

add_action("wp_ajax_user_profile_data", "user_profile_data");
add_action("wp_ajax_nopriv_user_profile_data", "user_profile_data");

function user_profile_data()
{
    $user_id = $_REQUEST["user_id"];

    //get user data
    $userdata = get_userdata($user_id);
    $display_name = $userdata->display_name;
    $description = $userdata->description;

    $user_image = get_field('user_image', 'user_' . $user_id);
    $user_position = get_field('user_position', 'user_' . $user_id);
    $user_linkedin = get_field('linkedin_url', 'user_' . $user_id);

    if ($user_id === false) {
        $result['type'] = "error";
        $result['user_data'] = $user_id;
    } else {
        $result['type'] = "success";
        $result['display_name'] = $display_name;
        $result['description'] = $description;
        $result['user_data'] = $user_id;
        $result['user_image'] = $user_image;
        $result['user_position'] = $user_position;
        $result['user_linkedin'] = $user_linkedin;
    }

    // Check if action was fired via Ajax call. If yes, JS code will be triggered, else the user is redirected
    if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
        $result = json_encode($result);
        echo $result;
    } else {
        header("Location: " . $_SERVER["HTTP_REFERER"]);
    }
    die();
}

/**
 * When click on load more - show more post data
 * @author JP <jitendra@growwithom.com>
 */

add_action("wp_ajax_load_more_data", "load_more_data");
add_action("wp_ajax_nopriv_load_more_data", "load_more_data");

function load_more_data()
{
    $paged_id = $_REQUEST["paged_id"];
    //get user data
    $paged = $paged_id + 1;
    $args = array(
        'post_type' => 'post',
        'post_status' => 'publish',
        'posts_per_page' => 6,
        'paged' => $paged
    );
    // The Query
    $the_query = new WP_Query($args);

    // The Loop
    if ($the_query->have_posts()) {
        while ($the_query->have_posts()) {
            $the_query->the_post(); ?>

<div class="col-md-4 blog-space">
  <div class="card blog-card-wrap">
    <?php $featured_img_url = wp_get_attachment_url(get_post_thumbnail_id(get_the_ID()));
            $author_id = get_the_author_meta('ID'); ?>
    <a href="<?php echo get_permalink(); ?>"> <img src="<?php echo $featured_img_url; ?>" class="card-img-top"
        alt="" /></a>
    <div class="card-body">
      <a href="<?php echo esc_url(get_the_author_meta('url', $author_id)); ?>" class="sm-profile">
        <div class="sm-profile-img">
          <img src="<?php echo esc_url(get_field('user_image', 'user_' . get_the_author_meta('ID'))); ?>" alt="@author" />
        </div>
        <div class="sm-profile-name">By <?php echo esc_html(get_the_author_meta('display_name', $author_id)); ?></div>
      </a>
      <a href="<?php echo get_permalink(); ?>">
        <h4><?php echo get_the_title(); ?></h4>
      </a>
    </div>
  </div>
</div>
<?php
        }
    } else {
        // no posts found
    }
    /* Restore original Post Data */
    wp_reset_postdata();

    // Check if action was fired via Ajax call. If yes, JS code will be triggered, else the user is redirected
    if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
        // $result = json_encode($result);
      //  echo $result;
    } else {
        header("Location: " . $_SERVER["HTTP_REFERER"]);
    }
    die();
}

// This theme uses wp_nav_menu() in one location.
register_nav_menus(
    array(
        'resource_menu' => __( 'Resource Menu', 'growwithom' )
    )
);

/**
 * When click on load more - show more videos data
 * @author JP <jitendra@growwithom.com>
 */

add_action("wp_ajax_load_more_data_videos", "load_more_data_videos");
add_action("wp_ajax_nopriv_load_more_data_videos", "load_more_data_videos");

function load_more_data_videos()
{
    $paged_id = $_REQUEST["paged_id"];
    //get user data
    $paged = $paged_id + 1;
    $args = array(
        'post_type' => 'video',
        'post_status' => 'publish',
        'posts_per_page' => 6,
        'paged' => $paged
    );
    // The Query
    $the_query = new WP_Query($args);

    // The Loop
    if ($the_query->have_posts()) {
        while ($the_query->have_posts()) {
        $the_query->the_post();
        $newpostid = get_the_ID();
        //second false skip ACF pre-processcing
        $url = get_field('video_url',$newpostid, false, false);
        //get wp_oEmed object, not a public method. new WP_oEmbed() would also be possible
        $oembed = _wp_oembed_get_object();
        //get provider
        $provider = $oembed->get_provider($url);
        //fetch oembed data as an object
        $oembed_data = $oembed->fetch($provider, $url);
        $thumbnail = $oembed_data->thumbnail_url;
        ?>
        <div class="col-md-4 blog-space">
        <div class="card blog-card-wrap">
            <?php $author_id = get_the_author_meta('ID'); ?>
            <a href="<?php echo esc_url(get_permalink()); ?>"> <img src="<?php echo esc_url($thumbnail); ?>" class="card-img-top" alt="" /></a>
            <div class="card-body">
                <?php
                ?>
                <a href="<?php echo esc_url(get_the_author_meta('url', $author_id)); ?>" class="sm-profile">
                    <div class="sm-profile-img">
                        <img src="<?php echo esc_url(get_field('user_image', 'user_' . get_the_author_meta('ID'))); ?>" alt="@author" />
                    </div>
                    <div class="sm-profile-name">By <?php echo esc_html(get_the_author_meta('display_name', $author_id)); ?></div>
                </a>
                <a href="<?php echo esc_url(get_permalink()); ?>">
                    <h4><?php echo esc_html(get_the_title()); ?></h4>
                </a>
            </div>
        </div>
        </div>
        <?php
        }
    } else {
        // no posts found
    }
    /* Restore original Post Data */
    wp_reset_postdata();
    die();
}

/* Add custom post type in category archive page */
function archive_page_add_custom_types( $query ) {
    if( (is_category() || is_tag()) && $query->is_archive() && empty( $query->query_vars['suppress_filters'] ) ) {
      $query->set( 'post_type', array(
       'post', 'ebooks','tool','video'
          ));
      }
  }
  add_action( 'pre_get_posts', 'archive_page_add_custom_types' );
